// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String
  password     String?
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  orderProduct OrderProduct[]
  Order        Order[]

  @@map("users")
}

model Order {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  userId       Int?
  orderProduct OrderProduct[]
  User         User?          @relation(fields: [userId], references: [id])

  @@map("orders")
}

model Product {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  orderProduct OrderProduct[]

  @@map("products")
}

model OrderProduct {
  Order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  Product   Product @relation(fields: [productId], references: [id])
  productId Int
  User      User?   @relation(fields: [userId], references: [id])
  userId    Int?

  @@id([orderId, productId])
  @@map("order_products")
}
