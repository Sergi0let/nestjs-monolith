// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Order Order[]

  @@map("users")
}

model Order {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now()) @map("created_at")
  updatedAt       DateTime       @updatedAt @map("updated_at")
  userId          Int?
  orderProduct    OrderProduct[]
  isPaid          Boolean        @default(false) @map("is_paid")
  paymentIntentId String?        @map("payment_intent_id")
  totalAmount     Int            @default(0) @map("total_amount")
  User            User?          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model Product {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  title        String
  description  String?        @db.VarChar(255)
  price        Int
  orderProduct OrderProduct[]
  Brand        Brand?         @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId      Int?

  @@map("products")
}

model Brand {
  id        Int       @id @default(autoincrement())
  title     String
  product   Product[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("brands")
}

model OrderProduct {
  Order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  @@id([orderId, productId])
  @@map("order_products")
}
